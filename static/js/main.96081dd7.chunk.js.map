{"version":3,"sources":["api/apiCall.js","redux/actionTypes.js","redux/repositories/repositoriesAction.js","redux/repositories/searchCheck/searchAction.js","components/navbar.js","components/cardComponent.js","redux/selectedRepo/selectedRepoAction.js","redux/modal/modalAction.js","redux/savedRepositories/savedRepositoriesAction.js","components/bodyComponent.js","components/switch.js","components/modalComponent.js","App.js","reportWebVitals.js","redux/repositories/repositoriesReducer.js","redux/modal/modalReducer.js","redux/selectedRepo/selectedRepoReducer.js","redux/savedRepositories/savedRepositoriesReducer.js","redux/repositories/searchCheck/searchReducer.js","redux/reducer.js","redux/store.js","index.js"],"names":["BASEPATH","getProjectWithName","projectName","a","page","per_page","axios","get","then","response","data","items","catch","error","getCommits","branch","array","push","getStatuses","console","log","getProjectWithFullName","getBranches","projectFullName","SETREPOSITORYLIST","DELETEITEMFROMREPOSITORYLIST","OPENMODAL","CLOSEMODAL","SETSELECTEDREPO","ADDSAVEDREPOSITORIESLIST","DELETESAVEDREPOSITORIESLIST","SEARCH","setRepositoryList","repositoryList","type","payload","setSearchCheck","value","NavbarComponent","useState","search","setSearch","savedRepoList","useSelector","state","dispatch","useDispatch","handleSelectedProjectsOnClick","repoList","k","saved","Navbar","bg","expand","Brand","Toggle","Collapse","id","Container","className","Form","FormControl","placeholder","onChange","e","target","Button","variant","onClick","map","item","CardComponent","props","searchCheck","searchValue","repo","setRepo","Card","border","style","width","Header","Row","Col","xs","header","size","savedRepo","addSavedRepoList","Body","Text","description","Footer","stargazers_count","language","license","name","BodyComponent","md","lg","xl","xxl","idx","full_name","AntSwitch","withStyles","theme","root","height","padding","display","switchBase","color","palette","grey","transform","common","white","opacity","backgroundColor","primary","main","borderColor","thumb","boxShadow","track","borderRadius","checked","Switch","SwitchButton","React","checkedC","setState","FormGroup","Typography","component","Grid","container","alignItems","spacing","event","handleOnClick","ModalComponent","modal","selectedRepo","branchList","setBranchList","commitList","setCommitList","statusesList","setStatusesList","setChecked","title","setTitle","handleCommitStatusChange","useEffect","Modal","centered","show","backdrop","keyboard","onHide","closeButton","Title","href","html_url","rel","DropdownButton","bsstyle","bssize","maxHeight","Dropdown","Item","as","target_url","node_id","sha","commit","message","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","action","filter","localStorage","getItem","JSON","parse","setItem","stringify","checkDeletion","rootReducer","combineReducers","repositoryReducer","modalReducer","selectedRepoReducer","savedRepoReducer","searchReducer","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.96081dd7.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst BASEPATH = \"https://api.github.com/\";\r\nexport const getProjectWithName = async (\r\n  projectName,\r\n  page = 1,\r\n  per_page = 10\r\n) => {\r\n  const response = await axios\r\n    .get(\r\n      `${BASEPATH}search/repositories?q=${projectName}&page=${page}&per_page=${per_page}`\r\n    )\r\n    .then((response) => response.data.items)\r\n    .catch((error) => {\r\n      throw error;\r\n    });\r\n  return response;\r\n};\r\n\r\nexport const getCommits = async (projectName, branch = null) => {\r\n  var response;\r\n  if (branch !== null) {\r\n    response = await axios\r\n      .get(`${BASEPATH}repos/${projectName}/commits/${branch}`)\r\n      .then((response) => {\r\n        var array = [];\r\n        array.push(response.data);\r\n        return array;\r\n      })\r\n      .catch((error) => {\r\n        throw error;\r\n      });\r\n  } else {\r\n    response = await axios\r\n      .get(`${BASEPATH}repos/${projectName}/commits`)\r\n      .then((response) => response.data)\r\n      .catch((error) => {\r\n        throw error;\r\n      });\r\n  }\r\n  return response;\r\n};\r\nexport const getStatuses = async (projectName, branch) => {\r\n  var response;\r\n\r\n  response = await axios\r\n    .get(`${BASEPATH}repos/${projectName}/statuses/${branch}`)\r\n    .then((response) => {\r\n      console.log(response.data);\r\n      return response.data;\r\n    })\r\n    .catch((error) => {\r\n      throw error;\r\n    });\r\n\r\n  return response;\r\n};\r\nexport const getProjectWithFullName = async (projectName) => {\r\n  const response = await axios\r\n    .get(`${BASEPATH}repos/${projectName}`)\r\n    .then((response) => response.data)\r\n    .catch((error) => {\r\n      throw error;\r\n    });\r\n  return response;\r\n};\r\n\r\nexport const getBranches = async (projectFullName, page = 1, per_page = 10) => {\r\n  const response = await axios\r\n    .get(`${BASEPATH}repos/${projectFullName}/branches`)\r\n    .then((response) => response.data)\r\n    .catch((error) => {\r\n      throw error;\r\n    });\r\n  return response;\r\n};\r\n","export const SETREPOSITORYLIST = \"SETREPOSITORYLIST\";\r\nexport const DELETEITEMFROMREPOSITORYLIST = \"DELETEITEMFROMREPOSITORYLIST\";\r\nexport const OPENMODAL = \"OPENMODAL\";\r\nexport const CLOSEMODAL = \"CLOSEMODAL\";\r\nexport const SETSELECTEDREPO = \"SETSELECTEDREPO\";\r\nexport const ADDSAVEDREPOSITORIESLIST = \"ADDSAVEDREPOSITORIESLIST\";\r\nexport const DELETESAVEDREPOSITORIESLIST = \"DELETESAVEDREPOSITORIESLIST\";\r\nexport const SEARCH = \"SEARCH\";\r\n","import {\r\n  DELETEITEMFROMREPOSITORYLIST,\r\n  SETREPOSITORYLIST,\r\n} from \"../actionTypes\";\r\nexport const setRepositoryList = (repositoryList) => {\r\n  return {\r\n    type: SETREPOSITORYLIST,\r\n    payload: repositoryList,\r\n  };\r\n};\r\nexport const deleteItemFromRepositoryList = (repositoryList) => {\r\n  return {\r\n    type: DELETEITEMFROMREPOSITORYLIST,\r\n    payload: repositoryList,\r\n  };\r\n};\r\n","import { SEARCH } from \"../../actionTypes\";\r\nexport const setSearchCheck = (value) => {\r\n  return {\r\n    type: SEARCH,\r\n    payload: value,\r\n  };\r\n};\r\n","import { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getCommits,\r\n  getProjectWithFullName,\r\n  getProjectWithName,\r\n} from \"../api/apiCall\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Form,\r\n  FormControl,\r\n  Nav,\r\n  Navbar,\r\n  NavDropdown,\r\n} from \"react-bootstrap\";\r\nimport { setRepositoryList } from \"../redux/repositories/repositoriesAction\";\r\nimport { setSearchCheck } from \"../redux/repositories/searchCheck/searchAction\";\r\n\r\nconst NavbarComponent = () => {\r\n  const [title, setTitle] = useState(\"language\");\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const repositoryList = useSelector((state) => state.repositoryList);\r\n  const savedRepoList = useSelector((state) => state.savedRepoList);\r\n\r\n  const dispatch = useDispatch();\r\n  const handleSelectedProjectsOnClick = async () => {\r\n    var repoList = [];\r\n    var response;\r\n    for (var k in savedRepoList) {\r\n      response = await getProjectWithFullName(savedRepoList[k]);\r\n      repoList.push({ ...response, saved: true });\r\n    }\r\n\r\n    dispatch(setRepositoryList(repoList));\r\n    dispatch(setSearchCheck(false));\r\n  };\r\n  const handleOnClick = () => {\r\n    if (search) {\r\n      getProjectWithName(search)\r\n        .then((response) =>\r\n          dispatch(\r\n            setRepositoryList(\r\n              response.map((item) => {\r\n                if (typeof savedRepoList[item.id] !== \"undefined\") {\r\n                  return { ...item, saved: true };\r\n                }\r\n                return { ...item, saved: false };\r\n              })\r\n            )\r\n          )\r\n        )\r\n        .catch((error) => console.log(error));\r\n\r\n      dispatch(setSearchCheck(true));\r\n    }\r\n  };\r\n  return (\r\n    <Navbar bg=\"light\" expand=\"lg\">\r\n      <Navbar.Brand>Github Integration</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"navbarScroll\" />\r\n      <Navbar.Collapse id=\"navbarScroll\">\r\n        <Container className=\"d-flex\" />\r\n        <Form className=\"d-flex\">\r\n          <FormControl\r\n            type=\"search\"\r\n            placeholder=\"Search\"\r\n            className=\"mr-2\"\r\n            aria-label=\"Search\"\r\n            value={search}\r\n            onChange={(e) => setSearch(e.target.value)}\r\n          />\r\n          <Button variant=\"outline-success\" onClick={handleOnClick}>\r\n            Search\r\n          </Button>\r\n        </Form>\r\n\r\n        <Button\r\n          className=\"d-flex\"\r\n          variant=\"outline-success\"\r\n          onClick={handleSelectedProjectsOnClick}\r\n        >\r\n          Selected Projects\r\n        </Button>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\nexport default NavbarComponent;\r\n","import { Button, Card, Col, Container, Row } from \"react-bootstrap\";\r\nimport { openModal } from \"../redux/modal/modalAction\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setSelectedRepo } from \"../redux/selectedRepo/selectedRepoAction\";\r\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\r\nimport Star from \"@material-ui/icons/Star\";\r\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\r\nimport {\r\n  addSavedRepoList,\r\n  deleteSavedRepoList,\r\n} from \"../redux/savedRepositories/savedRepositoriesAction\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  deleteItemFromRepositoryList,\r\n  setRepositoryList,\r\n} from \"../redux/repositories/repositoriesAction\";\r\nfunction CardComponent(props) {\r\n  const dispatch = useDispatch();\r\n  const searchCheck = useSelector((state) => state.searchValue);\r\n  const [repo, setRepo] = useState(props.data);\r\n  const onClickHandler = () => {\r\n    dispatch(setSelectedRepo(repo));\r\n    dispatch(openModal());\r\n  };\r\n  const onClickSaveHandler = () => {\r\n    const saved = !repo.saved;\r\n    if (!saved) {\r\n      setRepo({ ...repo, saved: saved });\r\n      dispatch(deleteSavedRepoList(repo));\r\n      if (!searchCheck) dispatch(deleteItemFromRepositoryList(repo));\r\n    } else {\r\n      setRepo({ ...repo, saved: saved });\r\n      dispatch(addSavedRepoList(repo));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card bg=\"light\" border=\"dark\" style={{ width: \"18rem\" }}>\r\n      <Card.Header>\r\n        <Row>\r\n          <Col xs={8}>\r\n            <Button variant=\"link\" onClick={onClickHandler}>\r\n              {props.header}\r\n            </Button>\r\n          </Col>\r\n          <Col>\r\n            <Button\r\n              size=\"sm\"\r\n              variant=\"outline-dark\"\r\n              onClick={onClickSaveHandler}\r\n            >\r\n              {repo.saved ? <BookmarkIcon /> : <BookmarkBorderIcon />}\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Card.Text>{props.description}</Card.Text>\r\n      </Card.Body>\r\n      <Card.Footer>\r\n        <Container className={\"d-flex p-2 bd-highlight\"}>\r\n          <Row>\r\n            <Col>\r\n              <Container className={\"d-inline-flex p-2 bd-highlight\"}>\r\n                <Star></Star>\r\n                <h6>{repo.stargazers_count}</h6>\r\n              </Container>\r\n            </Col>\r\n            <Col>\r\n              <Container className={\"d-inline-flex p-2 bd-highlight\"}>\r\n                <h6>{repo.language}</h6>\r\n              </Container>\r\n            </Col>\r\n            {repo.license && (\r\n              <Col>\r\n                <Container className={\"d-inline-flex p-2 bd-highlight\"}>\r\n                  <h6>{repo.license.name}</h6>\r\n                </Container>\r\n              </Col>\r\n            )}\r\n          </Row>\r\n        </Container>\r\n      </Card.Footer>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default CardComponent;\r\n","import { SETSELECTEDREPO } from \"../actionTypes\";\r\nexport const setSelectedRepo = (selectedRepo) => {\r\n  return {\r\n    type: SETSELECTEDREPO,\r\n    payload: selectedRepo,\r\n  };\r\n};\r\n\r\n","import { OPENMODAL, CLOSEMODAL } from \"../actionTypes\";\r\nexport const openModal = () => {\r\n  return {\r\n    type: OPENMODAL,\r\n    payload: true,\r\n  };\r\n};\r\n\r\nexport const closeModal = () => {\r\n  return {\r\n    type: CLOSEMODAL,\r\n    payload: false,\r\n  };\r\n};\r\n","import {\r\n  ADDSAVEDREPOSITORIESLIST,\r\n  DELETESAVEDREPOSITORIESLIST,\r\n} from \"../actionTypes\";\r\nexport const addSavedRepoList = (savedRepo) => {\r\n  return {\r\n    type: ADDSAVEDREPOSITORIESLIST,\r\n    payload: savedRepo,\r\n  };\r\n};\r\nexport const deleteSavedRepoList = (savedRepo) => {\r\n  return {\r\n    type: DELETESAVEDREPOSITORIESLIST,\r\n    payload: savedRepo,\r\n  };\r\n};\r\n","import { Col, Row } from \"react-bootstrap\";\r\nimport CardComponent from \"./cardComponent\";\r\nimport { useSelector } from \"react-redux\";\r\nfunction BodyComponent(props) {\r\n  const repoList = useSelector((state) => state.repositoryList);\r\n\r\n  return (\r\n    <Row xs={1} md={2} lg={3} xl={4} xxl={5} className=\"g-4\">\r\n      {repoList.map((item, idx) => (\r\n        <Col key={item.id}>\r\n          <CardComponent\r\n            header={item.full_name}\r\n            description={item.description}\r\n            data={item}\r\n          />\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default BodyComponent;\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { purple } from \"@material-ui/core/colors\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst AntSwitch = withStyles((theme) => ({\r\n  root: {\r\n    width: 28,\r\n    height: 16,\r\n    padding: 0,\r\n    display: \"flex\",\r\n  },\r\n  switchBase: {\r\n    padding: 2,\r\n    color: theme.palette.grey[500],\r\n    \"&$checked\": {\r\n      transform: \"translateX(12px)\",\r\n      color: theme.palette.common.white,\r\n      \"& + $track\": {\r\n        opacity: 1,\r\n        backgroundColor: theme.palette.primary.main,\r\n        borderColor: theme.palette.primary.main,\r\n      },\r\n    },\r\n  },\r\n  thumb: {\r\n    width: 12,\r\n    height: 12,\r\n    boxShadow: \"none\",\r\n  },\r\n  track: {\r\n    border: `1px solid ${theme.palette.grey[500]}`,\r\n    borderRadius: 16 / 2,\r\n    opacity: 1,\r\n    backgroundColor: theme.palette.common.white,\r\n  },\r\n  checked: {},\r\n}))(Switch);\r\n\r\nconst SwitchButton = (props) => {\r\n  const [state, setState] = React.useState({\r\n    checkedC: false,\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setState({ [event.target.name]: event.target.checked });\r\n    props.handleOnClick(event.target.checked);\r\n  };\r\n\r\n  return (\r\n    <FormGroup>\r\n      <Typography component=\"div\">\r\n        <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\r\n          <Grid item>Commits</Grid>\r\n          <Grid item>\r\n            <AntSwitch\r\n              checked={state.checkedC}\r\n              onChange={handleChange}\r\n              name=\"checkedC\"\r\n            />\r\n          </Grid>\r\n          <Grid item>Statuses</Grid>\r\n        </Grid>\r\n      </Typography>\r\n    </FormGroup>\r\n  );\r\n};\r\nexport default SwitchButton;\r\n","import { useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Dropdown,\r\n  DropdownButton,\r\n  Modal,\r\n} from \"react-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getBranches, getCommits, getStatuses } from \"../api/apiCall\";\r\nimport { closeModal } from \"../redux/modal/modalAction\";\r\n\r\nimport SwitchButton from \"./switch\";\r\nfunction ModalComponent(props) {\r\n  const modal = useSelector((state) => state.modal);\r\n  const selectedRepo = useSelector((state) => state.selectedRepo);\r\n  const [branchList, setBranchList] = useState([]);\r\n  const [commitList, setCommitList] = useState([]);\r\n  const [statusesList, setStatusesList] = useState([]);\r\n  const [checked, setChecked] = useState(false);\r\n  const [title, setTitle] = useState(\"Branches\");\r\n  const handleCommitStatusChange = (checked) => {\r\n    setChecked(checked);\r\n    if (checked) {\r\n      //Statuses\r\n\r\n      getStatuses(\r\n        selectedRepo !== null ? selectedRepo.full_name : \"\",\r\n        title !== \"Branches\" ? title : null\r\n      ).then((response) => setStatusesList(response));\r\n    } else {\r\n      //Commits\r\n\r\n      getCommits(\r\n        selectedRepo !== null ? selectedRepo.full_name : \"\",\r\n        title !== \"Branches\" ? title : null\r\n      ).then((response) => setCommitList(response));\r\n    }\r\n  };\r\n  const handleOnClick = (title) => {\r\n    setTitle(title);\r\n    handleCommitStatusChange(checked);\r\n  };\r\n  useEffect(() => {\r\n    if (modal) {\r\n      setTitle(\"Branches\");\r\n      getBranches(\r\n        selectedRepo !== null ? selectedRepo.full_name : \"\",\r\n        1,\r\n        10\r\n      ).then((response) => setBranchList(response));\r\n      getCommits(\r\n        selectedRepo !== null ? selectedRepo.full_name : \"\",\r\n        title !== \"Branches\" ? title : null\r\n      ).then((response) => setCommitList(response));\r\n    }\r\n  }, [modal]);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <>\r\n      <Modal\r\n        {...props}\r\n        size=\"xl\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        show={modal}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        onHide={() => dispatch(closeModal())}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            <a\r\n              target={\"_blank\"}\r\n              href={selectedRepo !== null ? selectedRepo.html_url : \"\"}\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              {selectedRepo !== null ? selectedRepo.full_name : \"\"}\r\n            </a>\r\n          </Modal.Title>\r\n          <DropdownButton\r\n            id=\"dropdown-item-button\"\r\n            bsstyle=\"default\"\r\n            bssize=\"small\"\r\n            style={{ maxHeight: \"28px\" }}\r\n            title={title}\r\n          >\r\n            {branchList.map((item, idx) => (\r\n              <Dropdown.Item\r\n                as=\"button\"\r\n                key={idx}\r\n                onClick={() => handleOnClick(item.name)}\r\n              >\r\n                {item.name}\r\n              </Dropdown.Item>\r\n            ))}\r\n          </DropdownButton>\r\n          <SwitchButton handleOnClick={handleCommitStatusChange} />\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {checked\r\n            ? statusesList.map((item) => (\r\n                <Container key={item.node_id}>\r\n                  <Container className={\"d-flex p-2 bd-highlight\"}>\r\n                    <p>\r\n                      <a\r\n                        target={\"_blank\"}\r\n                        href={item.target_url}\r\n                        rel=\"noopener noreferrer\"\r\n                      >\r\n                        {item.state}\r\n                      </a>\r\n                    </p>\r\n                  </Container>\r\n                  <p>{item.description}</p>\r\n                </Container>\r\n              ))\r\n            : commitList.map((item) => (\r\n                <Container key={item.node_id}>\r\n                  <Container className={\"d-flex p-2 bd-highlight\"}>\r\n                    <p>\r\n                      <a\r\n                        target={\"_blank\"}\r\n                        href={item.html_url}\r\n                        rel=\"noopener noreferrer\"\r\n                      >\r\n                        {item.sha}\r\n                      </a>\r\n                    </p>\r\n                  </Container>\r\n                  <p>{item.commit.message}</p>\r\n                </Container>\r\n              ))}\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ModalComponent;\r\n","import \"./App.css\";\r\nimport NavbarComponent from \"./components/navbar\";\r\nimport BodyComponent from \"./components/bodyComponent\";\r\nimport ModalComponent from \"./components/modalComponent\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <NavbarComponent />\r\n      <BodyComponent />\r\n      <ModalComponent />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {\r\n  DELETEITEMFROMREPOSITORYLIST,\r\n  SETREPOSITORYLIST,\r\n} from \"../actionTypes\";\r\nconst initialState = [];\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SETREPOSITORYLIST:\r\n      return action.payload;\r\n    case DELETEITEMFROMREPOSITORYLIST:\r\n      state = state.filter((value) => value.id !== action.payload.id);\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default reducer;\r\n","import { OPENMODAL, CLOSEMODAL } from \"../actionTypes\";\r\nconst initialState = false;\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case OPENMODAL:\r\n      return action.payload;\r\n    case CLOSEMODAL:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default reducer;\r\n","import { SETSELECTEDREPO } from \"../actionTypes\";\r\nconst initialState = null;\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SETSELECTEDREPO:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default reducer;\r\n","import {\r\n  ADDSAVEDREPOSITORIESLIST,\r\n  DELETESAVEDREPOSITORIESLIST,\r\n} from \"../actionTypes\";\r\nconst initialState =\r\n  localStorage.getItem(\"selectedRepos\") !== null\r\n    ? JSON.parse(localStorage.getItem(\"selectedRepos\"))\r\n    : {};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADDSAVEDREPOSITORIESLIST:\r\n      if (typeof state[action.payload.id] === \"undefined\") {\r\n        state[action.payload.id] = action.payload.full_name;\r\n        localStorage.setItem(\"selectedRepos\", JSON.stringify(state));\r\n      }\r\n      return state;\r\n    case DELETESAVEDREPOSITORIESLIST:\r\n      const checkDeletion = delete state[action.payload.id];\r\n      if (checkDeletion)\r\n        localStorage.setItem(\"selectedRepos\", JSON.stringify(state));\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import {\r\n  ADDSAVEDREPOSITORIESLIST,\r\n  DELETESAVEDREPOSITORIESLIST,\r\n  SEARCH,\r\n} from \"../../actionTypes\";\r\nconst initialState = false;\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SEARCH:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { combineReducers } from \"redux\";\r\nimport repositoryReducer from \"./repositories/repositoriesReducer\";\r\nimport modalReducer from \"./modal/modalReducer\";\r\nimport selectedRepoReducer from \"./selectedRepo/selectedRepoReducer\";\r\nimport savedRepoReducer from \"./savedRepositories/savedRepositoriesReducer\";\r\nimport searchReducer from \"./repositories/searchCheck/searchReducer\";\r\nconst rootReducer = combineReducers({\r\n  repositoryList: repositoryReducer,\r\n  modal: modalReducer,\r\n  selectedRepo: selectedRepoReducer,\r\n  savedRepoList: savedRepoReducer,\r\n  searchValue: searchReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore } from \"redux\";\r\nimport reducer from \"./reducer\";\r\n\r\nexport const store = createStore(reducer);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./redux/store\";\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}